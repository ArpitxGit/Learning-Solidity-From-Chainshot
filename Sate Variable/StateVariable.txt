#State Varibales:-

*State Variables* are stored in the *contract's persistent memory*. *Modifying a state variable* in one transaction *will change its value* for anyone who tries to read the variable afterwards.

In Solidity, declaring a *state variable* is as simple as declaring the variable inside of the contract:
</>contract Contract {
	bool myVariable;
}</>

*Data Types in Solidity have default values*, for booleans it is false. So, after deploying this contract, myVariable would be false.

We can *make it public* and *give it an initial value of true* :-
</> bool public myVariable = true;</>

=> Adding *public* here *automatically* creates a *getter* function for the variable.
Now we can access the value in *myVariable* by calling a function on the contract with that very name: *myVariable()*.
